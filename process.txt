settings add app
write models 
create form 
create templates
    in the templates while redirecting we don't have to write the urls , instead we havel to write the view name 

in the main urls add the url destination of the app 
there always first import the include from the django urls , otherwise the facility of the vs code import a different kind of the include which will crate error 
and place the app url above the admins

now create urls in the app 
    at index ->        home page of my blog site 
    at form in url ->  new blog form 
    while crating don't add a / before the url , but add one after the url 

now we will crate the views in the view file
     while creating keep the naming consistent 
     all the variables in the lower case 
     in the context section pass the same variable name like here we pass it as data this will ease the templates writing 

     take special care of the images/files 
     first of all in the views part add the request.files parameter along side the request.POST

*****************************************************************
                Images in the django 
first of all create a model field for that 
now create a folder for images (mostly django does it itself )
in the setting.py of project add
    MEDIA_URL='/media/'
in urls.py of the project 
    import the static and the setting and add the static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT) in the urlpatterns 
in the template 
    where you are writing the form add the enctype="multipart/form-data" 
    where you want to show it first check its availability in case you have left the blank option true in the model field then cite the correct model field of image and then src=" {{ MOdelname.fieldname.url}}" in the image tag




There are multiple things that you should check when the image isn't showing/saving.

1 - You're missing a request.FILES parameter.

2 - You've made changes to the model but haven't made migrations yet.

3 - Django couldn't create a folder to place the images in(never faced this problem)

4 - There's a typo in your HTML form; especially here: enctype="multipart/form-data"; (I once wrote multipart/form instead of multipart/form-data)

5 - If you're using some old Django version then you'd have to manually add the following code in your urls.py file: python urlpatterns = [] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT) 

6 - There's always a possibility that your filename is extremely lengthy and it causes some unexpected behavior.
******************************************************************

    write the bsic home view , form submission view 
    then write the specific blog related view 
    delete view-> no issue 
    blog_view ->in the template write the for loop of the tags properly don't use the variable name similar to the modal or modalfield in the iterative for loop 
    update_view -> if we not add another template for the update and try to do it by using the form template then a new blog will be  added instead of the updation 





___________________________________________________________________________________________________
                                        Authentication
new app for the users 
form for new user registration 
    use the in built usercreation form to create it 
    to gain more insights set the fields to the all 
    for simple registration use the password and the name fields or the relevant fields 

now add the urls 
     for this we have directly added the urls in the main project page 

create views for that 
    a functional view for the register page 

template
     the django is by default searching the template in the blog template section so i have to move them there 
     how to change this ??


                LOGIN/LOGOUT
****
all the users that we create from the above method are just general users they don't have any kind of authorization so if you login in using these credential until you provide so 
for ex if i login using these i will not see the admin section for that i need to login using the admin username and the password
****

urls 
    import the relevant views from the auth model (built-in)
    first write the urls  
    then in the as view part specify the location to look for the templates, as by default django searches the template in a specific directory  
    change the default url of the login system in the settings 
        add -> LOGIN_REDIRECT_URL='{name value of the path of relevant url/view}'

templates
added the visual effect of login on the template by using the user.is_authenticated

###########
Forbidden (403)
CSRF verification failed. Request aborted.
in this case always restart manually with killing the terminal  

<a href="{% url 'form' %}" style="color:white"> New Blog </a> 
in the redirect 
everywhere the urls and routing to the views is involved we have to mention the name of path instead of the url or view name  ?? right ??
##########


                            AUTHORIZATION

views file
    import decorater @login_required from the django.contrib.auth.decoraters
    wrap the decorater around the view you want to locked
    now change the default django route in the settings 
        add -> LOGIN_URL='{name value of the path of relevant url/view}'

http://127.0.0.1:8000/login/?next=/profile/ 
this shows that we were trying to access the profile page which was locked and after login in we will be redirect to the profile page and this behaviour is different from the usual login (we would be redirect to the home page )
facility provided by django in the LoginView


